{"version":3,"file":"answering.min.js","sources":["../src/answering.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * JavaScript to allow dragging options to slots (using mouse down or touch) or tab through slots using keyboard.\n *\n * @module     qtype_harakat/answering\n * @copyright  2023 Meirza\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery'\n], function(\n    $\n) {\n    \"use strict\";\n\n    // Close all harakat options if user click outside the options container.\n    document.onclick = function(e) {\n        if(\n            e.target.className !== 'qtype_harakat_options' &&\n            e.target.className !== 'harakat_yes' &&\n            e.target.className !== 'option_letter') {\n            var myClasses = document.querySelectorAll('.qtype_harakat_options'),\n            i = 0,\n            l = myClasses.length;\n\n            for (i; i < l; i++) {\n                myClasses[i].style.display = 'none';\n            }\n        }\n    };\n\n    /**\n     * Initialise one question.\n     *\n     * @method\n     * @param {String} inputname the id of the div.que that contains this question.\n     * @param {String} containerQuestionId the id of the div.que that contains this question.\n     * @param {String} containerId the id of the div.que that contains this question.\n     */\n    function HarakatQuestion(inputname, containerQuestionId, containerId) {\n        this.containerId = containerId;\n        this.inputname = inputname;\n        this.containerQuestionId = containerQuestionId;\n\n        const root = document.getElementById(containerQuestionId);\n\n        // Add click event handlers for the divs containing the answer since these cannot be enclosed in a label element.\n        const answerLabels = root.querySelectorAll('[class=harakat_yes]');\n        answerLabels.forEach((answerLabel) => {\n            answerLabel.addEventListener('click', (e) => {\n                this.showHarakatOptions(e);\n            });\n        });\n    }\n\n    /**\n     * Binding the drag/touch event again for newly created element.\n     *\n     * @param {jQuery} e Element to bind the event\n     */\n    HarakatQuestion.prototype.showHarakatOptions = function(e) {\n        const coords = this.getCoords(e);\n        window.console.log('#'+this.containerId+' .qtype_harakat_options');\n        $('#'+this.containerId+' .qtype_harakat_options').css({\n            top: coords.top,\n            left: coords.left,\n            display: 'block'\n        });\n        this.displayOptions(e);\n    };\n\n    /**\n         * Binding the drag/touch event again for newly created element.\n         *\n         * @param {jQuery} letterTarget Element to bind the event\n         */\n    HarakatQuestion.prototype.displayOptions = function(letterTarget) {\n\n        const thisQ = this;\n\n        const letter = letterTarget.target.getAttribute('original');\n\n        const a = answeringManager.harakat.split(\"|\");\n\n        var someDiv = document.createElement('div');\n        for (let i = -1; i < a.length; i++) {\n            var someSpan = document.createElement('span');\n\n            someSpan.className = \"option_letter\";\n            if (i > -1) {\n                var b = a[i].split(\"::\");\n                if (b.length > 1) {\n                    var txt = document.createTextNode(letter + String.fromCharCode(b[0])+String.fromCharCode(b[1]));\n                } else {\n                    var txt = document.createTextNode(letter + String.fromCharCode(a[i]));\n                }\n            } else {\n                var txt = document.createTextNode(letter);\n            }\n            someSpan.append(txt);\n\n            someSpan.addEventListener('click', function(e) {\n                letterTarget.target.innerText = e.target.innerText;\n                $('#'+thisQ.containerId+' .qtype_harakat_options').css('display', 'none');\n\n                thisQ.applyAnswer();\n            });\n\n            someDiv.append(someSpan);\n        }\n        $('#'+this.containerId+' .qtype_harakat_options').html('').append(someDiv);\n    };\n\n    /**\n         * Binding the drag/touch event again for newly created element.\n         *\n         * @param {jQuery} e Element to bind the event\n         */\n    HarakatQuestion.prototype.getCoords = function(e) {\n        const rect = e.target.getBoundingClientRect();\n        const left = e.clientX - rect.left; //x position within the element.\n        const top = e.clientY - rect.top;  //y position within the element.\n        return {\n          left: left,\n          top: top\n        };\n    };\n\n    HarakatQuestion.prototype.applyAnswer = function() {\n        const question = document.getElementById(this.containerQuestionId);\n        const inputname = document.getElementById(this.inputname);\n        inputname.value = question.innerText;\n    };\n\n    /**\n     * Singleton object that handles all the DragDropOntoImageQuestions\n     * on the page, and deals with event dispatching.\n     * @type {Object}\n     */\n    var answeringManager = {\n        /**\n         * {String} Harakat.\n         */\n        harakat: '',\n\n        /**\n         * {Object} all the questions on this page, indexed by containerId (id on the .que div).\n         */\n        questions: {}, // An object containing all the information about each question on the page.\n\n        /**\n             * Initialise one question.\n             *\n             * @method\n             * @param {String} inputname the id of the div.que that contains this question.\n             * @param {String} containerQuestionId the id of the div.que that contains this question.\n             * @param {String} containerId the id of the div.que that contains this question.\n             * @param {String} harakat the id of the div.que that contains this question.\n             */\n        init: function(inputname, containerQuestionId, containerId, harakat) {\n            answeringManager.questions[containerId] = new HarakatQuestion(\n                inputname,\n                containerQuestionId,\n                containerId,\n            );\n            answeringManager.harakat = harakat;\n        }\n    };\n\n    /**\n     * @alias module:qtype_ddimageortext/question\n     */\n     return {\n        init: answeringManager.init\n    };\n});\n"],"names":["define","$","HarakatQuestion","inputname","containerQuestionId","containerId","document","getElementById","querySelectorAll","forEach","answerLabel","addEventListener","e","showHarakatOptions","onclick","target","className","myClasses","i","l","length","style","display","prototype","coords","this","getCoords","window","console","log","css","top","left","displayOptions","letterTarget","thisQ","letter","getAttribute","a","answeringManager","harakat","split","someDiv","createElement","someSpan","b","txt","createTextNode","String","fromCharCode","append","innerText","applyAnswer","html","rect","getBoundingClientRect","clientX","clientY","question","value","questions","init"],"mappings":";;;;;;;AAsBAA,iCAAO,CACH,WACD,SACCC,YA4BSC,gBAAgBC,UAAWC,oBAAqBC,kBAChDA,YAAcA,iBACdF,UAAYA,eACZC,oBAAsBA,oBAEdE,SAASC,eAAeH,qBAGXI,iBAAiB,uBAC9BC,SAASC,cAClBA,YAAYC,iBAAiB,SAAUC,SAC9BC,mBAAmBD,SAlCpCN,SAASQ,QAAU,SAASF,MAEG,0BAAvBA,EAAEG,OAAOC,WACc,gBAAvBJ,EAAEG,OAAOC,WACc,kBAAvBJ,EAAEG,OAAOC,kBACLC,UAAYX,SAASE,iBAAiB,0BAC1CU,EAAI,EACJC,EAAIF,UAAUG,OAENF,EAAIC,EAAGD,IACXD,UAAUC,GAAGG,MAAMC,QAAU,QAkCzCpB,gBAAgBqB,UAAUV,mBAAqB,SAASD,SAC9CY,OAASC,KAAKC,UAAUd,GAC9Be,OAAOC,QAAQC,IAAI,IAAIJ,KAAKpB,YAAY,2BACxCJ,EAAE,IAAIwB,KAAKpB,YAAY,2BAA2ByB,IAAI,CAClDC,IAAKP,OAAOO,IACZC,KAAMR,OAAOQ,KACbV,QAAS,eAERW,eAAerB,IAQxBV,gBAAgBqB,UAAUU,eAAiB,SAASC,oBAE1CC,MAAQV,KAERW,OAASF,aAAanB,OAAOsB,aAAa,YAE1CC,EAAIC,iBAAiBC,QAAQC,MAAM,SAErCC,QAAUpC,SAASqC,cAAc,WAChC,IAAIzB,GAAK,EAAGA,EAAIoB,EAAElB,OAAQF,IAAK,KAC5B0B,SAAWtC,SAASqC,cAAc,WAEtCC,SAAS5B,UAAY,gBACjBE,GAAK,EAAG,KACJ2B,EAAIP,EAAEpB,GAAGuB,MAAM,SACfI,EAAEzB,OAAS,MACP0B,IAAMxC,SAASyC,eAAeX,OAASY,OAAOC,aAAaJ,EAAE,IAAIG,OAAOC,aAAaJ,EAAE,UAEvFC,IAAMxC,SAASyC,eAAeX,OAASY,OAAOC,aAAaX,EAAEpB,UAGjE4B,IAAMxC,SAASyC,eAAeX,QAEtCQ,SAASM,OAAOJ,KAEhBF,SAASjC,iBAAiB,SAAS,SAASC,GACxCsB,aAAanB,OAAOoC,UAAYvC,EAAEG,OAAOoC,UACzClD,EAAE,IAAIkC,MAAM9B,YAAY,2BAA2ByB,IAAI,UAAW,QAElEK,MAAMiB,iBAGVV,QAAQQ,OAAON,UAEnB3C,EAAE,IAAIwB,KAAKpB,YAAY,2BAA2BgD,KAAK,IAAIH,OAAOR,UAQtExC,gBAAgBqB,UAAUG,UAAY,SAASd,SACrC0C,KAAO1C,EAAEG,OAAOwC,8BAGf,CACLvB,KAHWpB,EAAE4C,QAAUF,KAAKtB,KAI5BD,IAHUnB,EAAE6C,QAAUH,KAAKvB,MAOjC7B,gBAAgBqB,UAAU6B,YAAc,iBAC9BM,SAAWpD,SAASC,eAAekB,KAAKrB,qBAC5BE,SAASC,eAAekB,KAAKtB,WACrCwD,MAAQD,SAASP,eAQ3BZ,iBAAmB,CAInBC,QAAS,GAKToB,UAAW,GAWXC,KAAM,SAAS1D,UAAWC,oBAAqBC,YAAamC,SACxDD,iBAAiBqB,UAAUvD,aAAe,IAAIH,gBAC1CC,UACAC,oBACAC,aAEJkC,iBAAiBC,QAAUA,gBAO3B,CACJqB,KAAMtB,iBAAiBsB"}